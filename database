#------------------------------da-------------------------



#-----------------------------so---------------------------
	self.1b1memberID.grid(row=0,column=0, sticky =W, padx=5)
	self.txtmemberID = Entry(InnerFrame,font=('arial', 12, 'bold'), bd=5, width=35,justify = 'left',textvariable=MemID)
	self.txtmemberID.grid(row=0,column=1)

	self.1b1Firstname = Label(InnerFrame, font=('arial',12, 'bold'),text="Firstname", bd=7, anchor='w',justify=LEFT)
	self.1blFirstname.grid(row=1,column=0, sticky =W, padx=5)
	self.txtFirstname = Entry(InnerFrame,font=('arial', 12, 'bold'), bd=5, width=35,justify = 'left',textvariable=Firstname)
	self.txtFirstname.grid(row=1,column=1)

	self.1blSurname= Label(InnerFrame,font=('arial',12, 'bold'),text="Surname",bd=7, justify=LEFT)
	self.1blSurname.grid(row=2,column=0, sticky =W, padx=5)
	self.txtSurname = Entry(InnerFrame,font=('arial', 12, 'bold'), bd=5, width=35,justify = 'left',textvariable=Surname)
	self.txtSurname.grid(row=2,column=1)

	self.1b1Address = Label(InnerFrame, font=('arial',12, 'bold'),text="Address", bd=7, )
	self.1blAddress.grid(row=,column=2, sticky=W,padx=5)
	self.txtAddress = Entry(InnerFrame,font=('arial', 12, 'bold'), bd=5, width=35,justify = 'left',textvariable=Address)
	self.txtAddress. grid(row=,column=3)
	
	self.1b1POBox = Label(InnerFrame, font=('arial',12, 'bold'),text="PO Box", bd=7, )
	self.1b1P0Box.grid(row=0,column=4, sticky =W, padx=5)
	self.txtpoBox = Entry(InnerFrame,font=('arial', 12,'bold'), bd=5, width=35,justify = 'left',textvariable=poBox)
	self.txtpoBox.grid(row=,column=5)

	self.lblGender = Label(InnerFrame, font=('arial',12,'bold'), text = "Gender ",bd=5)
	self.lblGender.grid(row=1,column=2, sticky = W, padx = 5)
		
	self.cboGender = ttk.Combobox(InnerFrame, width = 33, font=('arial',12,'bold'), state = 'readonly', textvariable = Gender)
	self.cboGender['values']=('','Female','Male')
	self.cboGender.current(0)
	self.cboGender.grid(row=1,column=3)

	self.lblEmail = Label(InnerFrame,font=('arial',12,'bold'), text = "Email ",bd=7)
	self.lblEmail.grid(row=1,column=4, sticky = W, padx = 5)
	self.txtEmail = Entry(InnerFrame, font=('arial',12,'bold'),bd = 5, width = 35, justify = 'left', textvariable = Email)
	self.txtEmail.grid(row=1,column=3)

	self.lblMobile = Label(InnerFrame,font=('arial',12,'bold'), text = "Mobile ",bd=5)
	self.lblMobile.grid(row=2,column=2, sticky = W, padx = 5)
	self.txtMobile = Entry(InnerFrame, font=('arial',12,'bold'),bd = 5, width = 35, justify = 'left', textvariable = Email)
	self.txtMobile.grid(row=2, column=3, sticky = W)
	self.lblAddress = Label(InnerFrame,font=('arial',12,'bold'), text = "Type ",bd=7)
	self.lblAddress.grid(row=2,column=4, sticky = W, padx = 5)

	self.cboTyp = ttk.combobox(InnerFrame, width = 33, font=('arial',12,'bold'), state = 'readonly', textvariable = MType)		
	self.cboType['values']=('Member Type','Annual Member','Quarterly','Monthly')
	self.cboType.current(0)
	self.cboType.grid(row=2,column=5)
def addNew():
	MemRef()
	if MemID.get() =="" or Firstname get()=="" or Surname.get()=="" :
		tkinter .messagebox.showerror("Error Check Input","Enter correct members details")
	else:
		sqlcon =pymysq1.connect(host="1ocalhost",user="root",password="12345", database="member")
		cur =sqlcon.cursor()
		cur.execute("insert into member values(%s,%s,%s,%s,%s,%s,%s,%s,%s)”,(

		MemID.get(),
		Firstname.get(),
		Surname.get(),
		Address.get(),
		PoBox.get(),
		Gender.get(),
		Mobile.get(),
		Email.get(),
		MType.get(),
		))

		sqlcon.commit()
		showRecord()
		sqlcon.close()
		tkinter .messagebox.showinfo("Data Entry Form","Record Entered Successfully")

#-----------------------------sow---------------------------  นาทีที่ 1:23.13  ลงไป

def addNew():
	MemRef()
	if MemID.get() =="" orㆍ Firstname.get()=="" or Surname.get()=="" :
	    tkinter.messagebox.showerror("Error Check Input","Enter correct members details")
	else:
	    sqlCon =pymysql.connect(host="localhost", user="root",password="12345" , database="member")
	    cur =sqlCon.cursor()
	    cur.execute("insert into member values (%s,%s,%s,%s,%s,%s,%s,%s,%s)", (
	    
	    MemID.get(),
	    Firstname.get(),
	    Surname.get(),
	    Address.get(),
	    PoBox.get(),
	    Gender.get(),
	    Mobile.get(),
	    Email.get(),
	    MType.get(),
	    
	    ))
	    
	    sqlCon.commit()
	    ShowRecord()
	    sqlCon.close()
	    tkinter.messagebox.showinfo("Data Entry Form", "Record Entered Successfully")

def ShowRecord():    
	sqlCon = pymysql.connect(host ="localhost",user="root",password="12345" , database="clubmember")
	cur = sqlCon.cursor()
	cur.execute("select * from clubmember")
	result = cur.fetchall()
	if len(result)!= 0:
	    self.member_records.delete(*self.member_records.get_children())
	    for row in result:
	    	    self.member_records.insert('',END,values=row)
	    sqlCon.commit()
	sqlCon.close()
	    
def MemberInfp(ev):
	viewInfo = self.member_records.focus()
	learnerData = self.member_records.item(viewInfo)
	row = learnerData['values']
	
	MemID.set(row[0])
	Firstname.set(row[1])
	Surname.set(row[2])
	Address.set(row[3])
	PoBox.set(row[4])
	Gender.set(row[5])
	Mobile.set(row[6])
	Email.set(row[7])
	MType.set(row[8])
	    
def update():
	sqlCon =pymysql.connect(host="localhost",user="root",password="1234",database="clubmember")
	cur =sqlCon.cursor()
	cur.execute("update clubmember set firstname=%s,surname=%s,address=%s,pobox=%s,gender=%s,"
		    "mobile=%s,email=%s,mtype=%s where memid=%s" , (
	Firstname.get(),
	Surname.get(),
	Address.get(),
	PoBox.get(),
	Gender.get(),
	Mobile.get(),
	Email.get(),
	MType.get(),
	MemID.get()
	))
	sqlCon.commit()
	ShowRecord()
	sqlCon.close()
	tkinter.messagebox.showinfo("Data Entry Form" , "Record Successfully Updated")
	
def deleteDB():
	sqlCon =pymysql.connect(host="localhost", user="root",password="12345", database="clubmember")
	cur =sqlCon.cursor()
	cur.execute("delete from clubmember where memid=%s",MemID.get())
	
	sqlCon.commit()
	ShowRecord()
	sqlCon.close()
	tkinter.messagebox.showinfo("Data Entry Form","Record Successfully Deleted")
	Reset()
#===========================================================================================================================================================#
def searchDB():
	try:
	   sqlCon = pymysql.connect(host ="localhost",user-"root",password="12345",database="clubmember" )
	   cur = sqlCon.cursor()
	   cur.execute("select * from clubmember where memid='%s'"%Search.get())
	   
	   row = cur.fetchone()
	   
	   MemID.set(row[0])
	   Firstname.set(row[1])
	   Surname.set(row[2])
	   Address.set(row[3])
	   PoBox.set(row[4])
	   Gender.set(row[5])
	   Mobile.set(row[6])
	   Email.set(row[7])
	   MType.set(row[8])
	   
	   sqlCon.commit()
	except:
	   tkinter.messagebox.showinfo("Data Entry Form","No Such Record Found")
	   Search.set("")
	   
	sqlcon.close()
#===========================================================================================================================================================#	   
	self.btnAddNew=Button(ButtonFrame,pady=1, bd=4, fg="black",font=('arial',16,'bold'),padx=29,
	width=11,height=1,text="Add New", bg="cadet blue").grid(row=0,column=0,padx=2)

	self.btnShowRecord=Button(ButtonFrame,pady=1, bd=4,fg="black",font=('arial', 16,'bold'),padx=29,
	width=11,height=1,text="Show Record",bg="cadet blue").grid(row=0, column=1,padx=2)

	self.btnUpdate=Button(ButtonFrame,pady=1, bd=4, fg="black" ,font=('arial',16,'bold'),padx=29,
	width=11,height=1,text="Update",bg="cadet blue",command= update).grid(row=0,column=2,padx=2)

	self.btnDelete=Button(ButtonFrame,pady=1, bd=4, fg="black",font=('arial',16,'bold'),padx=29,
	width=11,height=1, text="Delete",bg="cadet blue",command=deleteDB).grid(row=0,column=3,padx=2)

	self.btnReset=Button(ButtonFrame,pady=1, bd=4, fg="black",font=('arial',16,'bold'),padx=29,
	width=11,height=1,text="Reset",bg="cadet blue",command=Reset).grid(row=0,column=5,padx=2)

	self.btnExit=Button(ButtonFrame,pady=1, bd=4, fg="black",font=('arial', 16,'bold'),padx=29,
	width=11, height=1,text='Exit',bg="cadet blue",command=iExit).grid(row=0,column=6,padx=4)
#===========================================================================================================================================================#
	scroll_y=Scrollbar(TreeviewFrame,orient=VERTICAL)
	
	self.member_records=ttk.Treeview(TreeviewFrame,height=12,columns=("memid" ,"firstname" ,
	"surname","address","pobox","gender","mobile","email" ,"mtype"), yscrollcommand=scrolly.set)
	
	scroll_y.pack(side=RIGHT, fill=Y)
	
	self.member_records.heading("memid" ,text="MemberID.")
	self.member_records.heading("firstname",text="Firstname")
	self.member_records.heading("surname",text="Surname")
	self.member_records.heading("address",text="Address")
	self.member_records.heading("pobox",text="P0 Box")
	self.member_records.heading("gender" ",text="Gender")
	self.member_records.heading("mobile" ,text="Mobile")
	self.member_records.heading("email",text="Email")
	self.member_records.heading("mtype",text="Member Type")
	
	self.member_records['show']='headings '
	
	self.member_records.column("memid", width=148)
	self.member_records.column("firstname" ,width=148)
	self.member_records.column("surname",width=148)
	self.member_records.column("address",width=148)
	self.member_records.column("pobox",width=144)
	self.member_records.column("gender",width=100)
	self.member_records.column("mobile",width=148)
	self.member_records.column("email",width=148)
	self.member_records.column("mtype",width=148)
	
	self.member_records.pack(fill=B0TH,expand=1)
	self.member_records.bind("<ButtonRelease-1>", MemberInfo)
	ShowRecord()
#===========================================================================================================================================================#

if__name__=='__main__':
	root =Tk()
	application = memberConnect(root)
	root.mainloop()
