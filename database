#------------------------------da-------------------------



#-----------------------------so---------------------------
	self.lblGender = Label(InnerFrame, font=('arial',12,'bold'), text = "Gender ",bd=5)
	self.lblGender.grid(row=1,column=2, sticky = W, padx = 5)
		
	self.cboGender = ttk.Combobox(InnerFrame, width = 33, font=('arial',12,'bold'), state = 'readonly', textvariable = Gender)
	self.cboGender['values']=('','Female','Male')
	self.cboGender.current(0)
	self.cboGender.grid(row=1,column=3)

	self.lblEmail = Label(InnerFrame,font=('arial',12,'bold'), text = "Email ",bd=7)
	self.lblEmail.grid(row=1,column=4, sticky = W, padx = 5)
	self.txtEmail = Entry(InnerFrame, font=('arial',12,'bold'),bd = 5, width = 35, justify = 'left', textvariable = Email)
	self.txtEmail.grid(row=1,column=3)

	self.lblMobile = Label(InnerFrame,font=('arial',12,'bold'), text = "Mobile ",bd=5)
	self.lblMobile.grid(row=2,column=2, sticky = W, padx = 5)
	self.txtMobile = Entry(InnerFrame, font=('arial',12,'bold'),bd = 5, width = 35, justify = 'left', textvariable = Email)
	self.txtMobile.grid(row=2, column=3, sticky = W)
	self.lblAddress = Label(InnerFrame,font=('arial',12,'bold'), text = "Type ",bd=7)
	self.lblAddress.grid(row=2,column=4, sticky = W, padx = 5)

	self.cboTyp = ttk.combobox(InnerFrame, width = 33, font=('arial',12,'bold'), state = 'readonly', textvariable = MType)		
	self.cboType['values']=('Member Type','Annual Member','Quarterly','Monthly')
	self.cboType.current(0)
	self.cboType.grid(row=2,column=5)

	#================================ต้องสร้างถัง databases=========================================================#

	def ShowRecord():
		sqlCon = pymysql.connect(host = "locahost", user = "root" , password = "xxxxx" database = "clubmember")
		cur = sqlCon.cursor()
		cur.excute("select*from clubmeber")
		result = cur.fetchall()
		if len(result)!=0:
			self.member_records.delete(*self.member_record.get_children())
			for row in result: 
				self.member_records.insert('',END, values = row)
			sqlCon.commit()
		sqlCon.close()

	def MemberInfor(ev):

		viewInfo = self.member_records.focus()
		learnerData = self.member_records.item(viewInfo)
		row = lea['values']

		MemID.set(row[0])
		Firstname.set(row[1])
		Surname.set(row[2])
		Address.set(row[3])
		PoBox.set(row[4])		
		Gender.set(row[5])
		Mobile.set(row[6])
		Email.set(row[7])
		MType.set(row[8])

	#==============================================================================================================================#

	self.btnAddNew = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Add New", width=11, height=1, bg="cadet blue", padx=29).grid(row, colmn=0, padx=1)
	self.btnShowRecord = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Show Record", width=11, height=1, bg="cadet blue", padx=29).grid(row, colmn=0, padx=1)
	self.btnUpdate = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Update", width=11, height=1, bg="cadet blue", padx=29).grid(row, colmn=0, padx=1)
	self.btnDelete = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Delete", width=11, height=1, bg="cadet blue", padx=29).grid(row, colmn=0, padx=1)
	self.btnReset = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Reset", width=11, height=1, bg= "cadet blue", padx=29).grid(row, colmn=0, padx=1)
	self.btnExit = Button(ButtonFrame, pady=1, bd=4, font=('arial',12,'bold') text = "Exit", width=11, height=1, bg= "cadet blue", padx=29).grid(row, colmn=0, padx=1)

	#===========================================================================================================================================================#


	scroll_y = Scrollbar(TreeviewFrame,orient= VERTICAL)
	self.member_records - ttk.Treeview(TreeviewFrame, heigth=12, columns=("memid", "firstname", "surname", "address", "pobox", "gender", "mobile", "email", "mtype"), yscrollcommand = scroll_y.set)
	scroll_y.pack(side=RIGHT, fill=Y)

	self.member_records.headings("memid", text = "MemberID.")
	self.member_records.headings("firstname", text = "Firstname")
	self.member_records.headings("surnamr", text = "Surname")
	self.member_records.headings("address", text = "Address")
	self.member_records.headings("pobox", text = "PP Box")
	self.member_records.headings("gender", text = "Gender")
	self.member_records.headings("mobile", text = "Mobile")
	self.member_records.headings("email", text = "Email")
	self.member_records.headings("mtype", text = "Member Type")

	self.member_records['show']= 'headings'

	self.member_records.column("memid", width = 148)
	self.member_records.column("firstname", width = 148)
	self.member_records.column("surnamr", width = 148)
	self.member_records.column("address", width = 148)
	self.member_records.column("pobox", width = 148)
	self.member_records.column("gender", width = 148)
	self.member_records.column("mobile", width = 148)
	self.member_records.column("email", width = 148)
	self.member_records.column("mtype", width = 148)

	self.member_records.pack(fill=BOTH, expand=1)
	self.member_records.bind("<ButtonRelease-1>", MemberInfo)
	ShowRecord()

#-----------------------------sow---------------------------  นาทีที่ 1:23.13  ลงไป
def MemberInfp(ev):

    viewInfo = self.member_records.focus()
    learnerData = self.member_records.item(viewInfo)
    row = learnerData['values']

    MemID.set(row[0])
    Firstname.set(row[1])
    Surname.set(row[2])
    Address.set(row[3])
    PoBox.set(row[4])
    Gender.set(row[5])
    Mobile.set(row[6])
    Email.set(row[7])
    MType.set(row[8])

#-----------------------------sow--------------------------- 
def update():
	sqlCon =pymysql.connect(host="localhost",user="root",password="1234",database="clubmember")
	cur =sqlCon.cursor()
	cur.execute("update clubmember set firstname=%s,surname=%s,address=%s,pobox=%s,gender=%s,"
		    "mobile=%s,email=%s,mtype=%s where memid=%s" , (
	Firstname.get(),
	Surname.get(),
	Address.get(),
	PoBox.get(),
	Gender.get(),
	Mobile.get(),
	Email.get(),
	MType.get(),
	MemID.get()
	))
	sqlCon.commit()
	ShowRecord()
	sqlCon.close()
	tkinter.messagebox.showinfo("Data Entry Form" , "Record Successfully Updated")
	
def deleteDB():
	sqlCon =pymysql.connect(host="localhost", user="root",password="12345", database="clubmember")
	cur =sqlCon.cursor()
	cur.execute("delete from clubmember where memid=%s",MemID.get())
	
	sqlCon.commit()
	ShowRecord()
	sqlCon.close()
	tkinter.messagebox.showinfo("Data Entry Form","Record Successfully Deleted")
	Reset()
#===========================================================================================================================================================#
def searchDB():
	try:
	   sqlCon = pymysql.connect(host ="localhost",user-"root",password="12345",database="clubmember" )
	   cur = sqlCon.cursor()
	   cur.execute("select * from clubmember where memid='%s'"%Search.get())
	   
	   row = cur.fetchone()
	   
	   MemID.set(row[0])
	   Firstname.set(row[1])
	   Surname.set(row[2])
	   Address.set(row[3])
	   PoBox.set(row[4])
	   Gender.set(row[5])
	   Mobile.set(row[6])
	   Email.set(row[7])
	   MType.set(row[8])
	   
	   sqlCon.commit()
	except:
	   tkinter.messagebox.showinfo("Data Entry Form","No Such Record Found")
	   Search.set("")
	   
	sqlcon.close()
#===========================================================================================================================================================#	   
	   
